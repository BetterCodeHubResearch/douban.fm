{"version":3,"sources":["../libs/utils.js"],"names":[],"mappings":";;AAAA,IAAI,EAAE,GAAG,OAAO,CAAC,QAAQ,CAAC,CAAC;;AAE3B,OAAO,CAAC,GAAG,GAAG,GAAG,CAAC;AAClB,OAAO,CAAC,KAAK,GAAG,KAAK,CAAC;AACtB,OAAO,CAAC,QAAQ,GAAG,QAAQ,CAAC;AAC5B,OAAO,CAAC,UAAU,GAAG,UAAU,CAAC;AAChC,OAAO,CAAC,UAAU,GAAG,UAAU,CAAC;;;;;;;AAOhC,SAAS,KAAK,CAAC,IAAI,EAAE;AACnB,MAAI,CAAC,IAAI;AACP,WAAO,KAAK,CAAC;GAAA,AAEf,IAAI,GAAG,GAAG,IAAI,CAAC,OAAO,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC,GACnC,yBAAyB,GAAG,IAAI,GAChC,IAAI,CAAC;;AAEP,SAAO,GAAG,CAAC;CACZ;;;;;;;AAOD,SAAS,GAAG,CAAC,QAAQ,EAAE;AACrB,MAAI,CAAC,QAAQ;AACX,WAAO,KAAK,CAAC;GAAA,AAEf,IAAI,KAAK,GAAG,QAAQ,CAAC,MAAM,CACzB,QAAQ,CAAC,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,EACzB,QAAQ,CAAC,WAAW,CAAC,GAAG,CAAC,GAAG,CAAC,CAC9B,CAAC;;AAEF,MAAI,KAAK,CAAC,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;AAC3B,WAAO,KAAK,CAAC;GAAA,AAEf,OAAO,KAAK,CAAC,MAAM,CAAC,CAAC,EAAE,KAAK,CAAC,WAAW,CAAC,GAAG,CAAC,CAAC,CAAC;CAChD;;;;;;;AAOD,SAAS,QAAQ,CAAC,IAAI,EAAE;AACtB,MAAI;AACF,WAAO,EAAE,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC;GAC1B,CAAC,OAAO,GAAG,EAAE;AACZ,WAAO,EAAE,CAAC;GACX;CACF;;;;;;;AAOD,SAAS,UAAU,CAAC,IAAI,EAAE;AACxB,SAAO,IAAI,IAAI,OAAO,IAAI,AAAC,KAAK,UAAU,CAAC;CAC5C;;;;;;;AAOD,SAAS,UAAU,CAAC,GAAG,EAAE;AACvB,SAAO,GAAG,IAAI,GAAG,CAAC,OAAO,CAAC,2BAA2B,CAAC,GAAG,CAAC,CAAC,CAAC;CAC7D","file":"libs/utils.js","sourcesContent":["var fs = require('fsplus');\n\nexports.sid = sid;\nexports.album = album;\nexports.readJSON = readJSON;\nexports.isFunction = isFunction;\nexports.noSuchFile = noSuchFile;\n\n/**\n * [Escape a douban site uri from normal uri.]\n * @param  {[type]} link [description]\n * @return {[type]}      [description]\n */\nfunction album(link) {\n  if (!link) \n    return false;\n\n  var str = link.indexOf('http') === -1 ? \n    'http://music.douban.com' + link : \n    link;\n\n  return str;\n}\n\n/**\n * [Split Sid from a song's title]\n * @param  {[type]} filename [description]\n * @return {[type]}          [description]\n */\nfunction sid(filename) {\n  if (!filename) \n    return false;\n\n  var idstr = filename.substr(\n    filename.indexOf('p') + 1, \n    filename.lastIndexOf('.') - 1\n  );\n\n  if (idstr.indexOf('_') === -1) \n    return idstr;\n\n  return idstr.substr(0, idstr.lastIndexOf('_'));\n}\n\n/**\n * [Read JSON file, if Error return blank object]\n * @param  {[type]} file [description]\n * @return {[type]}      [description]\n */\nfunction readJSON(file) {\n  try {\n    return fs.readJSON(file);\n  } catch (err) {\n    return {};\n  }\n}\n\n/**\n * [Check if a object is Function Type]\n * @param  {[type]}  func [description]\n * @return {Boolean}      [description]\n */\nfunction isFunction(func) {\n  return func && typeof(func) === 'function';\n}\n\n/**\n * [Check if a Error is a NoSuchFile Error]\n * @param  {[type]} msg [description]\n * @return {[type]}     [description]\n */\nfunction noSuchFile(msg) {\n  return msg && msg.indexOf('no such file or directory') > -1;\n}\n"]}