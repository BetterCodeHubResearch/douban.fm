{"version":3,"sources":["../libs/fm.js"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;kBAsBe,QAAQ;;;;oBACN,MAAM;;;;oBACN,MAAM;;;;oBACN,MAAM;;;;sBACJ,QAAQ;;;;sBACR,QAAQ;;;;qBACT,UAAU;;;;wBACP,UAAU;;;;wBACV,oBAAoB;;;;mBAEzB,OAAO;;;;qBACL,SAAS;;;;mBACX,YAAY;;;;sBACT,UAAU;;;;wBACR,YAAY;;;;;AAGjC,IAAM,UAAU,GAAG;AACjB,UAAQ,EAAE,MAAM;AAChB,aAAa,MAAM;AACnB,KAAK,IAAI;AACT,KAAK,QAAQ;AACb,KAAK,MAAM;AACX,KAAK,MAAM;AACX,KAAK,OAAO;AACZ,KAAK,SAAS;CACf,CAAA;;;;IAGoB,EAAE;AACV,WADQ,EAAE,GACP;0BADK,EAAE;;;AAGnB,QAAI,CAAC,QAAQ,GAAG,mBAAM,CAAC;;;AAGvB,QAAI,CAAC,IAAI,GAAG,EAAE,CAAC;AACf,QAAI,CAAC,IAAI,CAAC,OAAO,GAAG,kBAAK,OAAO,CAAC,2BAA2B,CAAC,CAAC;AAC9D,QAAI,CAAC,IAAI,CAAC,OAAO,GAAG,kBAAK,OAAO,CAAC,2BAA2B,CAAC,CAAC;;;AAG9D,QAAI;AACF,UAAI,CAAC,OAAO,GAAG,gBAAG,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;KAC/C,CAAC,OAAO,GAAG,EAAE,EAEb;;;AAGD,QAAI,CAAC,IAAI,GAAG,IAAI,CAAC,OAAO,IAAI,IAAI,CAAC,OAAO,CAAC,IAAI,GAC3C,IAAI,CAAC,OAAO,CAAC,IAAI,GACjB,kBAAK,OAAO,CAAC,aAAa,CAAC,CAAC;;;AAG9B,QAAI,CAAC,IAAI,GAAG,kBAAK,IAAI,CAAC,IAAI,CAAC,IAAI,EAAE,MAAM,CAAC,CAAC;;;AAGzC,QAAI,CAAC,UAAU,GAAG,IAAI,CAAC,OAAO,GAC5B,IAAI,CAAC,OAAO,CAAC,UAAU,GACvB,IAAI,CAAC;;;AAGP,QAAI,CAAC,SAAS,GAAG,KAAK,CAAC;;;AAGvB,0BAAS,SAAS,CAAC,WAAW,CAAC,CAAC;;;;AAIhC,QAAI;AACF,0BAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;KACxB,CAAC,OAAO,GAAG,EAAE;AACZ,4BAAS,KAAK,CAAC,oBAAO,UAAU,CAAC,CAAC;AAClC,YAAM,GAAG,CAAC;KACX;GACF;;eA5CkB,EAAE;;;;;;;;;WAoDjB,cAAC,QAAQ,EAAE;;;AACb,sBAAG,MAAM,CAAC,IAAI,CAAC,IAAI,EAAE,UAAC,KAAK,EAAK;AAC9B,YAAI,KAAK,EACP,OAAO,MAAK,UAAU,CAAC,QAAQ,CAAC,CAAA;;AAElC,4BAAO,MAAK,IAAI,EAAE,UAAC,GAAG,EAAK;AACzB,cAAI,GAAG,EACL,OAAO,sBAAS,KAAK,CAAC,oBAAO,UAAU,CAAC,CAAC;;AAE3C,iBAAO,MAAK,UAAU,CAAC,QAAQ,CAAC,CAAA;SACjC,CAAC,CAAA;OACH,CAAC,CAAA;KACH;;;;;;;;;;;WASI,eAAC,OAAO,EAAE,OAAO,EAAE,QAAQ,EAAE;AAChC,UAAI,IAAI,GAAG,IAAI,CAAC;;AAEhB,UAAI,KAAK,GAAG;AACV,YAAI,EAAE,GAAG;AACT,eAAO,EAAE,IAAI,CAAC,IAAI,CAAC,OAAO;AAC1B,eAAO,EAAE,OAAO,CAAC,UAAU;AAC3B,aAAK,EAAE,SAAS,CAAC,OAAO,EAAE,OAAO,CAAC,UAAU,CAAC,GAAG,IAAI,CAAC,IAAI,GAAG,KAAK,EAClE,CAAA;;;AAGD,UAAI,OAAO,EAAE;AACX,aAAK,CAAC,KAAK,GAAG,OAAO,CAAC,KAAK,CAAA;AAC3B,aAAK,CAAC,OAAO,GAAG,OAAO,CAAC,OAAO,CAAA;AAC/B,aAAK,CAAC,MAAM,GAAG,OAAO,CAAC,MAAM,CAAA;OAC9B;;AAED,aAAO,iBAAI,KAAK,CACd,KAAK,EACL,mBAAM,UAAU,CAAC,QAAQ,CAAC,GAAG,QAAQ,GAAG,EAAE,CAC3C,CAAA;;AAED,eAAS,EAAE,CAAC,GAAG,EAAE,KAAK,EAAE,MAAM,EAAE;AAC9B,YAAI,GAAG;AACL,iBAAM;SAAA,AACR,IAAI,CAAC,KAAK,IAAI,KAAK,CAAC,MAAM,KAAK,CAAC;AAC9B,iBAAM;SAAA,AACR,IAAI,CAAC,IAAI,CAAC,MAAM;AACd,iBAAM;SAAA,AAER,KAAK,CAAC,OAAO,CAAC,IAAI,CAAC,MAAM,CAAC,GAAG,CAAC,CAAA;OAC/B;KACF;;;;;;;;;;;WASS,oBAAC,QAAQ,EAAE;;;;AAEnB,uBAAI,EAAE,CAAC,QAAQ,CAAC,UAAC,GAAG,EAAE,IAAI,EAAK;AAC7B,YAAI,GAAG,EACL,sBAAS,KAAK,CAAC,oBAAO,kBAAkB,CAAC,CAAA;;;AAG3C,wBAAG,QAAQ,CAAC,OAAK,IAAI,CAAC,OAAO,EAAE,UAAC,CAAC,EAAE,IAAI,EAAK;AAC1C,cAAI,YAAY,GAAG,IAAI,IAAI,IAAI,CAAC,OAAO,IAAI,IAAI,CAAC,OAAO,CAAC,SAAS,CAAA;AACjE,cAAI,OAAO,GAAG,YAAY,GAAG,IAAI,CAAC,OAAO,GAAG,IAAI,CAAA;;;AAGhD,iBAAK,IAAI,GAAG,2BAAc,CAAA;AAC1B,iBAAK,IAAI,CAAC,MAAM,CAAC,sBAAS,IAAI,CAAC,OAAO,CAAC,CAAC,CAAA;AACxC,iBAAK,IAAI,CAAC,IAAI,CACZ,CAAC,iBAAI,GAAG,CAAC,QAAQ,CAAC,CAAC,MAAM,CAAC,CAAC,GAAG,GAAG,CAAC,iBAAI,GAAG,CAAC,UAAU,CAAC,CAAC,MAAM,CAAC,IAAI,CAAC,GAAG,EAAE,CAAC,CACzE,CAAA;;;AAGD,iBAAK,IAAI,CAAC,EAAE,CAAC,UAAU,EAAE,UAAC,GAAG,EAAE,KAAK,EAAK;AACvC,gBAAI,CAAC,UAAU,CAAC,GAAG,CAAC,IAAI,CAAC,EACvB,OAAO,KAAK,CAAC;;AAEf,mBAAO,OAAK,UAAU,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC,OAAK,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,EAAE,OAAO,CAAC,CAAA;WACnE,CAAC,CAAA;;AAEF,iBAAK,IAAI,CAAC,EAAE,CAAC,OAAO,EAAE,YAAM;AAC1B,mBAAK,IAAI,CAAC,IAAI,EAAE,CAAA;WACjB,CAAC,CAAA;;;;AAIF,cAAI,IAAI,IAAI,IAAI,CAAC,WAAW,EAAE;AAC5B,mBAAK,IAAI,CAAC,IAAI,CAAC,WAAW,EAAE,OAAO,CAAC,CAAA;AACpC,mBAAK,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC,CAAA;AACvC,mBAAO,KAAK,CAAA;WACb;;;;AAID,iBAAK,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAA;SACnB,CAAC,CAAA;OACH,CAAC,CAAA;;;AAGF,aAAO,QAAQ,IAAI,QAAQ,EAAE,CAAC;KAC/B;;;;;;;;;;WAQG,cAAC,OAAO,EAAE,OAAO,EAAE;;;AACrB,UAAI,IAAI,GAAG,IAAI,CAAA;AACf,UAAI,IAAI,GAAG,IAAI,CAAC,IAAI,CAAA;AACpB,UAAI,cAAc,GAAG,OAAO,IAAI,OAAO,CAAC,KAAK,CAAA;AAC7C,UAAI,UAAU,GAAG,SAAS,CAAC,SAAS,EAAE,OAAO,CAAC,UAAU,CAAC,IAAI,CAAC,cAAc,CAAA;;;AAG5E,UAAI,UAAU;AACZ,eAAO,IAAI,CAAC,MAAM,CAAC,QAAQ,EAAE,oBAAO,eAAe,CAAC,CAAA;OAAA;AAGtD,UAAI,IAAI,CAAC,MAAM,KAAK,UAAU,IAAI,IAAI,CAAC,MAAM,KAAK,aAAa;AAC7D,eAAM;OAAA,AAER,IAAI,IAAI,CAAC,MAAM,KAAK,SAAS,IAAI,IAAI,CAAC,MAAM,KAAK,OAAO,EAAE;AACxD,YAAI,OAAO,IAAI,CAAC,OAAO,AAAC,IAAI,SAAS,EACnC,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,OAAO,CAAC,CAAA;;AAE1B,YAAI,IAAI,CAAC,MAAM,EAAE;AACf,cAAI,CAAC,MAAM,CAAC,IAAI,EAAE,CAAA;AAClB,iBAAO,IAAI,CAAC,MAAM,CAAA;SACnB;OACF;;;AAGD,UAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,CAAA;AACpB,UAAI,CAAC,OAAO,GAAG,OAAO,CAAC,KAAK,CAAA;AAC5B,UAAI,CAAC,MAAM,GAAG,UAAU,CAAA;AACxB,UAAI,CAAC,MAAM,CAAC,OAAO,CAAC,KAAK,EAAE,sBAAS,OAAO,EAAE,CAAC,CAAA;;AAE9C,UAAI;AACF,wBAAG,UAAU,CAAC,IAAI,CAAC,IAAI,CAAC,OAAO,EAAE,EAAE,WAAW,EAAE,OAAO,EAAE,CAAC,CAAA;OAC3D,CAAC,OAAO,GAAG,EAAE,EAAE,CAAC;;;AAGjB,UAAI,CAAC,KAAK,CAAC,OAAO,EAAE,OAAO,EAAE,UAAC,GAAG,EAAE,KAAK,EAAE,MAAM,EAAK;AACnD,YAAI,GAAG,EAAE;AACP,iBAAK,MAAM,GAAG,OAAO,CAAC;AACtB,iBAAO,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC,KAAK,EAAE,mBAAM,GAAG,CAAC,GAAG,CAAC,QAAQ,EAAE,CAAC,CAAC,CAAC;SAC9D;;;AAGD,YAAI,MAAM,IAAI,CAAC,MAAM,CAAC,OAAO,EAC3B,IAAI,CAAC,MAAM,CAAC,QAAQ,EAAE,mBAAM,OAAO,CAAC,OAAO,CAAC,CAAC,CAAC;;AAEhD,eAAK,MAAM,GAAG,OAAO,CAAC;AACtB,eAAK,MAAM,GAAG,wBAAW,KAAK,EAAE;AAC9B,aAAG,EAAE,KAAK;AACV,eAAK,EAAE,IAAI;AACX,mBAAS,EAAE,OAAK,IAAI;AACpB,oBAAU,EAAE,OAAK,UAAU;SAC5B,CAAC,CAAC;;AAEH,eAAK,MAAM,CAAC,IAAI,EAAE,CAAC;AACnB,eAAK,MAAM,CAAC,EAAE,CAAC,aAAa,EAAE,aAAa,CAAC,CAAC;AAC7C,eAAK,MAAM,CAAC,EAAE,CAAC,SAAS,EAAE,SAAS,CAAC,CAAC;;AAErC,iBAAS,aAAa,CAAC,GAAG,EAAE;AAC1B,cAAI,CAAC,MAAM,GAAG,aAAa,CAAC;AAC5B,cAAI,CAAC,MAAM,CAAC,OAAO,CAAC,KAAK,EAAE,sBAAS,OAAO,EAAE,CAAC,CAAC;SAChD;;AAED,iBAAS,SAAS,CAAC,IAAI,EAAE;AACvB,cAAI,WAAW,GAAG,IAAI,CAAC,KAAK,IAAI,IAAI,CAAC,GAAG,CAAC;AACzC,cAAI,CAAC,MAAM,GAAG,SAAS,CAAC;;AAExB,cAAI,CAAC,MAAM,CAAC,QAAQ,EAAE,mBAAM,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC;;AAExC,cAAI,CAAC,MAAM,CAAC,OAAO,CAAC,KAAK,EAAE,sBAAS,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC;;AAEhD,cAAI,WAAW,EAAE;AACf,gBAAI,OAAO,GAAG,EAAE,CAAC;AACjB,mBAAO,CAAC,IAAI,CAAC,GAAG,CAAC,GAAG,IAAI,CAAC;AACzB,gBAAI;AACF,8BAAG,UAAU,CAAC,IAAI,CAAC,IAAI,CAAC,OAAO,EAAE,OAAO,CAAC,CAAC;aAC3C,CAAC,OAAO,GAAG,EAAE,EAEb;WACF;;;AAGD,cAAI,IAAI,CAAC,SAAS,EAAE;gBAMT,QAAQ,GAAjB,UAAkB,GAAG,EAAE,GAAG,EAAE;AAC1B,kBAAI,GAAG,EACL,OAAO,IAAI,CAAC,MAAM,CAAC,QAAQ,EAAE,mBAAM,IAAI,CAAC,oBAAO,YAAY,GAAG,GAAG,CAAC,QAAQ,EAAE,CAAC,CAAC,CAAC;AACjF,kBAAI,CAAC,GAAG,EACN,OAAO,IAAI,CAAC,MAAM,CAAC,QAAQ,EAAE,mBAAM,IAAI,CAAC,oBAAO,YAAY,CAAC,CAAC,CAAC;;AAEhE,kBAAI,CAAC,GAAG,GAAG,IAAI,CAAC,KAAK,CAAC,GAAG,EAAE,UAAC,IAAI,EAAE,KAAK,EAAK;AAC1C,oBAAI,CAAC,MAAM,CAAC,OAAO,CAAC,KAAK,EAAE,sBAAS,IAAI,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC,CAAC;eACvD,CAAC,CAAC;aACJ;;AAdD,gBAAI,IAAI,CAAC,GAAG,EACV,IAAI,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC;;AAElB,gBAAI,CAAC,KAAK,CAAC,IAAI,EAAE,QAAQ,CAAC,CAAC;WAY5B;;;AAGD,cAAI,IAAI,CAAC,GAAG,GAAG,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,MAAM,GAAG,CAAC;AACxC,mBAAO,KAAK,CAAC;WAAA,AAEf,OAAO,IAAI,CAAC,KAAK,CAAC,OAAO,EAAE,OAAO,CAAC,CAAC;SACrC;OACF,CAAC,CAAA;KACH;;;;;;;;;;;WASG,cAAC,OAAO,EAAE,OAAO,EAAE;;;AACrB,UAAI,CAAC,IAAI,CAAC,MAAM;AACd,eAAM;OAAA,AAER,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,UAAC,GAAG,EAAE,IAAI,EAAK;AAC9B,YAAI,GAAG,EACL,OAAK,IAAI,CAAC,MAAM,CAAC,QAAQ,EAAE,oBAAO,SAAS,CAAC,CAAA;;AAE9C,eAAM;OACP,CAAC,CAAA;KACH;;;;;;;;;;;;WAUG,cAAC,OAAO,EAAE,OAAO,EAAE;AACrB,UAAI,CAAC,IAAI,CAAC,MAAM;AACd,eAAM;OAAA,AACR,IAAI,IAAI,CAAC,MAAM,KAAK,SAAS;AAC3B,eAAO,IAAI,CAAC,IAAI,CAAC,OAAO,EAAE,OAAO,CAAC,CAAA;OAAA,AAEpC,IAAI,IAAI,GAAG,IAAI,CAAC,IAAI,CAAA;AACpB,UAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,CAAA;AACpB,UAAI,CAAC,MAAM,CAAC,QAAQ,EAAE,sBAAS,KAAK,EAAE,CAAC,CAAA;AACvC,UAAI,CAAC,MAAM,GAAG,SAAS,CAAA;;AAEvB,aAAO,IAAI,CAAC,MAAM,CAAC,IAAI,EAAE,CAAA;KAC1B;;;;;;;;;;;WASK,gBAAC,OAAO,EAAE,OAAO,EAAE;AACvB,UAAI,CAAC,IAAI,CAAC,MAAM;AACd,eAAM;OAAA,AACR,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,OAAO;AACtB,eAAM;OAAA,AACR,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC,GAAG;AAC1B,eAAO,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,QAAQ,EAAE,oBAAO,SAAS,CAAC,CAAA;OAAA,AACrD,IAAI,CAAC,OAAO;AACV,eAAO,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,QAAQ,EAAE,oBAAO,eAAe,CAAC,CAAA;OAAA,AAE3D,IAAI,IAAI,GAAG,IAAI,CAAA;AACf,UAAI,IAAI,GAAG,IAAI,CAAC,IAAI,CAAA;AACpB,UAAI,IAAI,GAAG,IAAI,CAAC,MAAM,CAAC,OAAO,CAAA;AAC9B,UAAI,KAAK,GAAG;AACV,WAAG,EAAE,IAAI,CAAC,GAAG;AACb,eAAO,EAAE,IAAI,CAAC,OAAO;AACrB,eAAO,EAAE,OAAO,CAAC,OAAO;AACxB,cAAM,EAAE,OAAO,CAAC,MAAM;AACtB,aAAK,EAAE,OAAO,CAAC,KAAK;OACrB,CAAA;;AAED,UAAI,IAAI,CAAC,IAAI,EACX,KAAK,CAAC,IAAI,GAAG,GAAG,CAAA;;AAElB,UAAI,CAAC,MAAM,CAAC,QAAQ,EAAE,SAAS,CAAC,CAAA;;AAEhC,uBAAI,IAAI,CAAC,KAAK,EAAE,UAAC,GAAG,EAAE,MAAM,EAAK;AAC/B,YAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,CAAA;;AAEpB,YAAI,GAAG,EACL,IAAI,CAAC,MAAM,CAAC,QAAQ,EAAE,oBAAO,MAAM,CAAC,CAAA;AACtC,YAAI,CAAC,GAAG,EACN,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC,IAAI,GAAG,CAAC,IAAI,CAAC,IAAI,CAAA;;AAEvC,eAAO,IAAI,CAAC,MAAM,CAChB,IAAI,CAAC,OAAO;;AAEZ,8BAAS,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,OAAO,EAAE,IAAI,EAAE,IAAI,CAAC,CAC/C,CAAA;OACF,CAAC,CAAA;KACH;;;;;;;;;;;WASM,iBAAC,OAAO,EAAE,OAAO,EAAE;AACxB,UAAI,OAAO,CAAC,UAAU,IAAI,CAAC,EAAE;AAC3B,eAAM;OAAA,AAER,IAAI,CAAC,SAAS,GAAG,CAAC,CAAC,CAAC,IAAI,CAAC,SAAS,CAAA;AAClC,UAAI,CAAC,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,CAAA;AACzB,UAAI,CAAC,IAAI,CAAC,MAAM,CAAC,QAAQ,EAAE,IAAI,CAAC,SAAS,GAAG,MAAM,GAAG,MAAM,CAAC,CAAA;;AAE5D,aAAO,KAAK,CAAA;KACb;;;;;;;;;;;WASC,YAAC,OAAO,EAAE,OAAO,EAAE;AACnB,UAAI,CAAC,IAAI,CAAC,MAAM,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,OAAO;AACtC,eAAM;OAAA,AACR,IAAI,OAAO,CAAC,UAAU,IAAI,CAAC,EAAE;AAC3B,eAAM;OAAA,AAER,OAAO,kBACL,mBAAM,KAAK,CAAC,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC,KAAK,CAAC,CACvC,CAAA;KACF;;;;;;;;;;;WASI,eAAC,OAAO,EAAE,OAAO,EAAE;AACtB,UAAI,CAAC,IAAI,CAAC,MAAM,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,OAAO;AACtC,eAAO,KAAK,CAAA;OAAA,AAEd,OAAO,kBACL,sBAAS,KAAK,CAAC,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC,CACpC,CAAA;KACF;;;;;;;;;;WAQG,gBAAG;AACL,UAAI,CAAC,IAAI,CAAC,IAAI,EAAE,CAAA;AAChB,aAAO,OAAO,CAAC,IAAI,EAAE,CAAA;KACtB;;;SA3akB,EAAE;;;qBAAF,EAAE;;;;;;;;AAobvB,SAAS,SAAS,CAAC,KAAK,EAAE,EAAE,EAAE;AAC5B,MAAI,KAAK,KAAK,OAAO,IAAI,EAAE,IAAI,CAAC,EAAE;AAChC,WAAO,IAAI,CAAA;GAAA,AACb,IAAI,KAAK,KAAK,SAAS,KAAK,EAAE,IAAI,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC,CAAA,AAAC;AAC9C,WAAO,IAAI,CAAA;GAAA,AAEb,OAAO,KAAK,CAAA;CACb","file":"libs/fm.js","sourcesContent":["/**\n* +--------------------------------------+\n* | douban.fm                192kbps PRO |\n* |--------------------------------------|\n* |                                      |\n* | ++++++++++++++++++++++++++++++++++++ |\n* | ++++++++++++++++++++++++++++++++++++ |\n* | ++++++++++++++++++++++++++++++++++++ |\n* | ++++++++++++++++++++++++++++++++++++ |\n* | ++++++++++++++++++++++++++++++++++++ |\n* |                                      |\n* |                          +---+ +-+-+ |\n* | A tiny and smart cli     |+++| | + | |\n* | player based on Node.js  +---+ +-+-+ |\n* |                                      |\n* +--------------------------------------+\n*\n* Douban.fm command line interface based on Node.js\n* @author: 新浪微博@郭宇 [turingou](http://guoyu.me)\n*\n**/\n\nimport fs from 'fsplus'\nimport path from 'path'\nimport open from 'open'\nimport home from 'home'\nimport mkdirp from 'mkdirp'\nimport Player from 'player'\nimport color from 'colorful'\nimport consoler from 'consoler'\nimport termList from 'term-list-enhanced'\n\nimport sdk from './sdk'\nimport utils from './utils'\nimport pkg from '../package'\nimport errors from './errors'\nimport template from './template'\n\n// Keypress shortcut list\nconst shorthands = {\n  'return': 'play',\n  'backspace': 'stop',\n  'g': 'go',\n  'l': 'loving',\n  'n': 'next',\n  'q': 'quit',\n  's': 'share',\n  'r': 'showLrc'\n}\n\n// Class Douban.fm\nexport default class FM {\n  constructor() {\n    // Fetch user's home\n    this.USERHOME = home();\n\n    // Resolve config files' path\n    this.path = {};\n    this.path.profile = home.resolve('~/.douban.fm.profile.json');\n    this.path.history = home.resolve('~/.douban.fm.history.json');\n\n    // Read configs from JSON files\n    try {\n      this.profile = fs.readJSON(this.path.profile);\n    } catch (err) {\n      // Ingore missing profile\n    }\n\n    // Get music download folder as `this.home`\n    this.home = this.profile && this.profile.home ?\n      this.profile.home :\n      home.resolve('~/douban.fm');\n\n    // Get favourite music download folder\n    this.love = path.join(this.home, 'love');\n\n    // Get `http_proxy` options\n    this.http_proxy = this.profile ?\n      this.profile.http_proxy :\n      null;\n\n    // Disable Lrc by default\n    this.isShowLrc = false;\n\n    // Update UI\n    template.updateTab('Douban FM');\n\n    // Ensure music download folder exists,\n    // If not, Mkdir of it.\n    try {\n      mkdirp.sync(this.love);\n    } catch (err) {\n      consoler.error(errors.setup_fail);\n      throw err;\n    }\n  }\n\n  /**\n  *\n  * Init douban.fm command line interface.\n  * @param {Function} callback [The callback function when all set done]\n  *\n  **/\n  init(callback) {\n    fs.exists(self.home, (exist) => {\n      if (exist)\n        return this.createMenu(callback)\n\n      mkdirp(this.love, (err) => {\n        if (err)\n          return consoler.error(errors.mkdir_fail);\n\n        return this.createMenu(callback)\n      })\n    })\n  }\n\n  /**\n   * [Fetch songs and add them to playlist]\n   * @param  {Object}   channel \n   * @param  {Object}   account \n   * @param  {Function}   callback\n   * @return {Object}           \n   */\n  fetch(channel, account, callback) {\n    var self = this;\n\n    var query = {\n      kbps: 192,\n      history: self.path.history,\n      channel: channel.channel_id,\n      local: isChannel('local', channel.channel_id) ? self.home : false,\n    }\n\n    // Replce this block with fn.merge()\n    if (account) {\n      query.token = account.token\n      query.user_id = account.user_id\n      query.expire = account.expire\n    }\n\n    return sdk.songs(\n      query, \n      utils.isFunction(callback) ? callback : cb\n    )\n\n    function cb(err, songs, result) {\n      if (err) \n        return\n      if (!songs || songs.length === 0) \n        return\n      if (!self.player) \n        return\n\n      songs.forEach(self.player.add)\n    }\n  }\n\n  /**\n  *\n  * [Create command line interface menu]\n  * [Using term-list-enhanced module]\n  * @param {Function} callback [The callback function when all set done]\n  *\n  **/\n  createMenu(callback) {\n    // Fetch channels\n    sdk.fm.channels((err, list) => {\n      if (err)\n        consoler.error(errors.turn_to_local_mode)\n\n      // Fetch configs, Show user's infomation\n      fs.readJSON(this.path.profile, (e, user) => {\n        var vaildAccount = user && user.account && user.account.user_name\n        var account = vaildAccount ? user.account : null\n\n        // Init menu\n        this.menu = new termList()\n        this.menu.header(template.logo(account))\n        this.menu.adds(\n          [sdk.mhz.localMhz].concat(!err ? [sdk.mhz.privateMhz].concat(list) : [])\n        )\n\n        // Bind keypress events\n        this.menu.on('keypress', (key, index) => {\n          if (!shorthands[key.name]) \n            return false;\n\n          return this[shorthands[key.name]](this.menu.items[index], account)\n        })\n\n        this.menu.on('empty', () => {\n          this.menu.stop()\n        })\n\n        // Check last played channel,\n        // If it existed, play this channel instantly.\n        if (user && user.lastChannel) {\n          this.play(user.lastChannel, account)\n          this.menu.start(user.lastChannel.index)\n          return false\n        }\n\n        // Start menu at line 2,\n        // Which below the logo.\n        this.menu.start(1)\n      })\n    })\n\n    // Trigger callback if necessary.\n    return callback && callback();\n  }\n\n  /**\n   * [Playing songs when everything is ready]\n   * @param  {Object} channel \n   * @param  {Object} account \n   * @return {}         \n   */\n  play(channel, account) {\n    var self = this\n    var menu = this.menu\n    var isVaildAccount = account && account.token\n    var privateMhz = isChannel('private', channel.channel_id) && !isVaildAccount\n\n    // Check if this kind of mHz is private\n    if (privateMhz)\n      return menu.update('header', errors.account_missing)\n\n    // Clear last label\n    if (this.status === 'fetching' || this.status === 'downloading')\n      return\n\n    if (this.status === 'playing' || this.status === 'error') {\n      if (typeof(this.channel) != undefined) \n        menu.clear(this.channel)\n\n      if (this.player) {\n        this.player.stop()\n        delete this.player\n      }\n    }\n\n    // Clear label status\n    menu.clear('header')\n    this.channel = channel.index\n    this.status = 'fetching'\n    menu.update(channel.index, template.listing())\n\n    try {\n      fs.updateJSON(this.path.profile, { lastChannel: channel })\n    } catch (err) {};\n\n    // Start fetching songs\n    this.fetch(channel, account, (err, songs, result) => {\n      if (err) {\n        this.status = 'error';\n        return menu.update(channel.index, color.red(err.toString()));\n      }\n\n      // Mark a `PRO` label on logo\n      if (result && !result.warning) \n        menu.update('header', color.inverse(' PRO '));\n\n      this.status = 'ready';\n      this.player = new Player(songs, {\n        src: 'url',\n        cache: true,\n        downloads: this.home,\n        http_proxy: this.http_proxy\n      });\n\n      this.player.play();\n      this.player.on('downloading', onDownloading);\n      this.player.on('playing', onPlaying);\n\n      function onDownloading(url) {\n        self.status = 'downloading';\n        menu.update(channel.index, template.loading());\n      }\n\n      function onPlaying(song) {\n        var isValidSong = song.title && song.sid;\n        self.status = 'playing';\n        // Update playing label\n        menu.update('header', color.green('>'));\n        // Update song infomation\n        menu.update(channel.index, template.song(song));\n        // Logging songs history\n        if (isValidSong) {\n          var updates = {};\n          updates[song.sid] = song;\n          try {\n            fs.updateJSON(self.path.history, updates);\n          } catch (err) {\n            // Errors must be logged in a private place.\n          }\n        }\n\n        // Print LRC if needed.\n        if (self.isShowLrc) {\n          if (self.lrc) \n            self.lrc.stop();\n\n          geci.fetch(song, printLrc);\n\n          function printLrc(err, lrc) {\n            if (err)\n              return menu.update('header', color.grey(errors.lrc_notfound + err.toString()));\n            if (!lrc)\n              return menu.update('header', color.grey(errors.lrc_notfound));\n\n            self.lrc = geci.print(lrc, (line, extra) => {\n              menu.update(channel.index, template.song(song, line));\n            });\n          }\n        }\n\n        // TODO: Still trying after failed two times.\n        if (song._id < self.player.list.length - 1)\n          return false;\n\n        return self.fetch(channel, account);\n      }\n    })\n  }\n\n  /**\n  *\n  * Play the next song in the playlist\n  * @param channel {Object}\n  * @param account {Object}\n  *\n  **/\n  next(channel, account) {\n    if (!this.player)\n      return\n\n    this.player.next((err, song) => {\n      if (err) \n        this.menu.update('header', errors.last_song)\n\n      return\n    })\n  }\n\n  /**\n  *\n  * [Stop playing]\n  * [And show the stopped status on logo.]\n  * @param channel {Object}\n  * @param account {Object}\n  *\n  **/\n  stop(channel, account) {\n    if (!this.player)\n      return\n    if (this.status === 'stopped')\n      return this.play(channel, account)\n\n    var menu = this.menu\n    menu.clear('header')\n    menu.update('header', template.pause())\n    this.status = 'stopped'\n\n    return this.player.stop()\n  }\n\n  /**\n  *\n  * [Add current song to lovelist when pressing `L`]\n  * @param channel {Object}\n  * @param account {Object}\n  *\n  **/\n  loving(channel, account) {\n    if (!this.player)\n      return\n    if (!this.player.playing)\n      return\n    if (!this.player.playing.sid)\n      return this.menu.update('header', errors.love_fail)\n    if (!account)\n      return this.menu.update('header', errors.account_missing)\n\n    var self = this\n    var menu = self.menu\n    var song = self.player.playing\n    var query = {\n      sid: song.sid,\n      channel: self.channel,\n      user_id: account.user_id,\n      expire: account.expire,\n      token: account.token\n    }\n\n    if (song.like)\n      query.type = 'u'\n\n    menu.update('header', '正在加载...')\n\n    sdk.love(query, (err, result) => {\n      menu.clear('header')\n\n      if (err)\n        menu.update('header', errors.normal)\n      if (!err)\n        self.player.playing.like = !song.like\n\n      return menu.update(\n        self.channel,\n        // keep silence, do not notify\n        template.song(self.player.playing, null, true) \n      )\n    })\n  }\n\n  /**\n  *\n  * [Show lrc when when pressing `R`]\n  * @param channel {Object}\n  * @param account {Object}\n  *\n  **/\n  showLrc(channel, account) {\n    if (channel.channel_id == -99)\n      return\n\n    this.isShowLrc = !!!this.isShowLrc\n    this.menu.clear('header')\n    this.menu.update('header', this.isShowLrc ? '歌词开启' : '歌词关闭')\n\n    return false\n  }\n\n  /**\n  *\n  * [Goto the music album page when pressing `G`]\n  * @param {Object} channel\n  * @param {Object} account\n  *\n  **/\n  go(channel, account) {\n    if (!this.player || !this.player.playing)\n      return\n    if (channel.channel_id == -99)\n      return\n\n    return open(\n      utils.album(this.player.playing.album)\n    )\n  }\n\n  /**\n  *\n  * [Share the current playing songs to Weibo when pressing `S`]\n  * @param channel {Object}\n  * @param account {Object}\n  *\n  **/\n  share(channel, account) {\n    if (!this.player || !this.player.playing)\n      return false\n\n    return open(\n      template.share(this.player.playing)\n    )\n  }\n\n  /**\n  *\n  * [Quit the FM]\n  * [And kill the process when pressing `Q`]\n  *\n  **/\n  quit() {\n    this.menu.stop()\n    return process.exit()\n  }\n}\n\n/**\n * [Check if a object is channel object]\n * @param  {String}  alias [The channel type]\n * @param  {Int}     id    [The channel ID]\n * @return {Boolean}\n */\nfunction isChannel(alias, id) {\n  if (alias === 'local' && id == -99)\n    return true\n  if (alias === 'private' && (id == 0 || id == -3))\n    return true\n\n  return false\n}\n"]}